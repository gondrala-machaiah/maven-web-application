node{
try{
def mavenHome = tool name: 'maven 3.8.5'
echo "the job name is:${env.JOB_NAME}"
echo "the build number is:${env.BUILD_NUMBER}"
echo "the node name is:${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])]) 

//Get Code From Repo
stage('Get Code From Repo'){
git branch: 'development', credentialsId: '075d263e-f533-4513-9f53-4359eae1dfef', url: 'https://github.com/gondrala-machaiah/maven-web-application.git'


}
//Build
stage ('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
//Generate a sonarqube Report
stage('Generate a report'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}
//Upload Artifact into Nexus
stage ('Upload Artifact into Nexus'){
sh "${mavenHome}/bin/mvn deploy"
}
//deploy application into tomcat server
stage('deploy app'){sshagent(['3de3bf88-b7a4-43dc-b070-13ebf5a1050e']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.33.230:/opt/apache-tomcat-9.0.68/webapps"
}
}*/
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendSlackNotifications(currentBuild.result)
}
def slacknotification (buildStatus = 'STARTED')
  buildStatus = buildStatus ?: 'SUCCESS'


if (buildStatus == 'STARTED'){
 colour = 'YELLOW'
 colourCode = '#FFFF00'
}
else if (buildStatus == 'SUCCESS') {
color = 'GREEN'
colorCode = '#00FF00'
}
else {
color = 'RED'
colorCode = '#FF0000'
}

slackSend (color: colourCode, message: summary)

}//tryclosing
}//node closing
